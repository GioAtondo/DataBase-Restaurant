/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package newpackage;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author Gio
 */
public class ReservacionDialog extends javax.swing.JDialog {

    /**
     * Creates new form ReservacionDialog
     */
    public ReservacionDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);
        iniciar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        codigomesa = new javax.swing.JLabel();
        codigocliente = new javax.swing.JLabel();
        agregar = new javax.swing.JButton();
        fecha = new javax.swing.JLabel();
        diacombobox = new javax.swing.JComboBox<>();
        dia = new javax.swing.JLabel();
        mes = new javax.swing.JLabel();
        mescombobox = new javax.swing.JComboBox<>();
        año = new javax.swing.JLabel();
        añocombobox = new javax.swing.JComboBox<>();
        hora = new javax.swing.JLabel();
        horacombobox = new javax.swing.JComboBox<>();
        clienteComboBox = new javax.swing.JComboBox<>();
        mesaComboBox = new javax.swing.JComboBox<>();
        eliminarBoton = new javax.swing.JButton();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        codigomesa.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 14)); // NOI18N
        codigomesa.setForeground(new java.awt.Color(0, 0, 0));
        codigomesa.setText("Codigo Mesa:");
        jPanel1.add(codigomesa, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 180, -1, -1));

        codigocliente.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 14)); // NOI18N
        codigocliente.setForeground(new java.awt.Color(0, 0, 0));
        codigocliente.setText("Codigo Cliente:");
        jPanel1.add(codigocliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 220, -1, -1));

        agregar.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 24)); // NOI18N
        agregar.setText("Agregar");
        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarActionPerformed(evt);
            }
        });
        jPanel1.add(agregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 420, -1, -1));

        fecha.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 14)); // NOI18N
        fecha.setForeground(new java.awt.Color(0, 0, 0));
        fecha.setText("Fecha");
        jPanel1.add(fecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 250, -1, -1));

        diacombobox.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 14)); // NOI18N
        diacombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        jPanel1.add(diacombobox, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 280, 260, 20));

        dia.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 14)); // NOI18N
        dia.setForeground(new java.awt.Color(0, 0, 0));
        dia.setText("Dia:");
        jPanel1.add(dia, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 280, -1, -1));

        mes.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 14)); // NOI18N
        mes.setForeground(new java.awt.Color(0, 0, 0));
        mes.setText("Mes:");
        jPanel1.add(mes, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 310, -1, -1));

        mescombobox.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 14)); // NOI18N
        mescombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        jPanel1.add(mescombobox, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 310, 260, 20));

        año.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 14)); // NOI18N
        año.setForeground(new java.awt.Color(0, 0, 0));
        año.setText("Año:");
        jPanel1.add(año, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 340, -1, -1));

        añocombobox.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 14)); // NOI18N
        añocombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2020", "2021", "2022", "2023", "2024", "2025" }));
        jPanel1.add(añocombobox, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 340, 260, 20));

        hora.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 14)); // NOI18N
        hora.setForeground(new java.awt.Color(0, 0, 0));
        hora.setText("Hora:");
        jPanel1.add(hora, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 370, -1, -1));

        horacombobox.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 14)); // NOI18N
        horacombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "12:00:00", "12:30:00", "13:00:00", "13:30:00", "14:00:00", "14:30:00", "15:00:00", "15:30:00", "16:00:00", "16:30:00", "17:00:00", "17:30:00", "18:00:00" }));
        jPanel1.add(horacombobox, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 370, 260, 20));

        jPanel1.add(clienteComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 220, 260, -1));

        jPanel1.add(mesaComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 180, 260, -1));

        eliminarBoton.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        eliminarBoton.setText("Eliminar");
        eliminarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarBotonActionPerformed(evt);
            }
        });
        jPanel1.add(eliminarBoton, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 420, -1, -1));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/newpackage/Reservacion.png"))); // NOI18N
        jPanel1.add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void iniciar() {
        try {
            ClienteDAO cDAO = new ClienteDAO();
            MesaDAO mDAO = new MesaDAO();
            ArrayList<ClienteDTO> clientes = cDAO.getAll();
            ArrayList<MesaDTO> mesas = mDAO.getAll();

            for (ClienteDTO cliente : clientes) {
                clienteComboBox.addItem(cliente.getCodigoCliente() + ": " + cliente.getNombre());
            }

            for (MesaDTO mesa : mesas) {
                mesaComboBox.addItem(mesa.getCodigo_mesa() + ": " + mesa.getLocalizacion());
            }
        } catch (Exception ex) {
            Logger.getLogger(ReservacionDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public JButton getEliminarBoton() {
        return eliminarBoton;
    }

    public void setEliminarBoton(JButton eliminarBoton) {
        this.eliminarBoton = eliminarBoton;
    }

    public JButton getAgregar() {
        return agregar;
    }

    public void setAgregar(JButton agregar) {
        this.agregar = agregar;
    }

    public JComboBox<String> getAñocombobox() {
        return añocombobox;
    }

    public void setAñocombobox(JComboBox<String> añocombobox) {
        this.añocombobox = añocombobox;
    }

    public JComboBox<String> getClienteComboBox() {
        return clienteComboBox;
    }

    public void setClienteComboBox(JComboBox<String> clienteComboBox) {
        this.clienteComboBox = clienteComboBox;
    }

    public JComboBox<String> getDiacombobox() {
        return diacombobox;
    }

    public void setDiacombobox(JComboBox<String> diacombobox) {
        this.diacombobox = diacombobox;
    }

    public JComboBox<String> getHoracombobox() {
        return horacombobox;
    }

    public void setHoracombobox(JComboBox<String> horacombobox) {
        this.horacombobox = horacombobox;
    }

    public JComboBox<String> getMesaComboBox() {
        return mesaComboBox;
    }

    public void setMesaComboBox(JComboBox<String> mesaComboBox) {
        this.mesaComboBox = mesaComboBox;
    }

    public JComboBox<String> getMescombobox() {
        return mescombobox;
    }

    public void setMescombobox(JComboBox<String> mescombobox) {
        this.mescombobox = mescombobox;
    }

    public ReservacionDTO getDtoReservacion() {
        return dtoReservacion;
    }

    public void setDtoReservacion(ReservacionDTO dtoReservacion) {
        this.dtoReservacion = dtoReservacion;
    }


    private void agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarActionPerformed
        String dia = diacombobox.getSelectedItem().toString();
        String mes = mescombobox.getSelectedItem().toString();
        String año = añocombobox.getSelectedItem().toString();
        String hora = horacombobox.getSelectedItem().toString();
        String date = año + "-" + mes + "-" + dia + " " + hora;
        if (mesaComboBox.getSelectedItem().toString().equals("") || clienteComboBox.getSelectedItem().toString().equals("")) {
            JOptionPane.showMessageDialog(this, "No todos los campos estan llenos", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                String datosMesa[] = mesaComboBox.getSelectedItem().toString().split(":");
                dtoReservacion.setCodigo_Mesa(datosMesa[0]);
                String[] datos = clienteComboBox.getSelectedItem().toString().split(":");
                String dto = datos[0];
                dtoReservacion.setCodigo_Cliente(dto);
                dtoReservacion.setFecha(date);
                if (verificar(dtoReservacion)) {
                    if (agregar.getText().equals("Agregar")) {
                        dtaReservacion.append(dtoReservacion);
                        JOptionPane.showMessageDialog(this, "Reservación en Mesa " + dtoReservacion.getCodigo_Mesa()
                                + " registrada.",
                                "Listo", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        dtaReservacion.update(dtoReservacion);
                    }
                    dispose();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getLocalizedMessage());
            }
        }
    }//GEN-LAST:event_agregarActionPerformed

    private void eliminarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarBotonActionPerformed
        try {
            dtaReservacion.delete(dtoReservacion);
            JOptionPane.showMessageDialog(this, "Reservación " + dtoReservacion.getCodigo_Reservacion()
                            + " eliminada.", "Listo", JOptionPane.INFORMATION_MESSAGE);
            dispose();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Esta  Reservación ya tuvo servicio, no se puede elminar", "ADVERTENCIA", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_eliminarBotonActionPerformed

    private boolean verificar(ReservacionDTO insert) {
        try {
            ArrayList<ReservacionDTO> reservaciones = dtaReservacion.getAll();
            int diff = 0;
            String[] datos;
            if (Integer.parseInt(dtaReservacion.selectHour(insert.getFecha())) > 18) {
                JOptionPane.showMessageDialog(this, "El restaurante cierra a las 9pm\n Por favor, reserve a más tardar a las 6pm", "Error", JOptionPane.ERROR_MESSAGE);
                return false;
            }
            for (ReservacionDTO reservacion : reservaciones) {
                diff = Integer.parseInt(dtaReservacion.timeDiff(reservacion.getFecha(), insert.getFecha())); //Direfencia de horas entre las dos reservaciones
                datos = mesaComboBox.getSelectedItem().toString().split(":");
                if (reservacion.getCodigo_Mesa().equals(datos[0]) && diff < 3 && !reservacion.getCodigo_Reservacion().equals(insert.getCodigo_Reservacion())) {
                    JOptionPane.showMessageDialog(this, "Esta mesa está reservada para este horario", "Error", JOptionPane.ERROR_MESSAGE);
                    return false;
                }
            }
            return true;
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
        return true;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReservacionDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReservacionDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReservacionDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReservacionDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ReservacionDialog dialog = new ReservacionDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregar;
    private javax.swing.JLabel año;
    private javax.swing.JComboBox<String> añocombobox;
    private javax.swing.JLabel background;
    private javax.swing.JComboBox<String> clienteComboBox;
    private javax.swing.JLabel codigocliente;
    private javax.swing.JLabel codigomesa;
    private javax.swing.JLabel dia;
    private javax.swing.JComboBox<String> diacombobox;
    private javax.swing.JButton eliminarBoton;
    private javax.swing.JLabel fecha;
    private javax.swing.JLabel hora;
    private javax.swing.JComboBox<String> horacombobox;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel mes;
    private javax.swing.JComboBox<String> mesaComboBox;
    private javax.swing.JComboBox<String> mescombobox;
    // End of variables declaration//GEN-END:variables
    public ReservacionDAO dtaReservacion = new ReservacionDAO();
    public ReservacionDTO dtoReservacion = new ReservacionDTO();
}
